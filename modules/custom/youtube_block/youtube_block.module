<?php

/**
 * Implements hook_help().
 *
 * Gives us a set of help documentation as recommended by the Drupal community standards.
 */
function youtube_block_help($path, $arg) {
    switch ($path) {
        case 'examples/youtube_block':
            return "<p>" . t("Just another way to display a bunch of Youtube videos for the Squirrel
            Whisperers band. To use, simply enable the Youtube block (in admin/blocks) and add as
             many Youtube video IDs as you want. This module will not load the Youtube player on page
             load. Instead, it displays the video thumbnail for each video. The player will only load
             when the thumbnail gets clicked. By doing so you reduce the size of your site by about
             400-500 KB. Made exclusively for the Squirrel Whisperers band.") . "</p>";
    }
}

/**
 * Implements hook_block_info().
 */
function youtube_block_block_info() {
    $blocks = array();
    $blocks['youtube'] = array(
        'info' => t('Youtube Block'),
    );

    return $blocks;
}

/**
 * Implements hook_block_configure().
 */
function youtube_block_block_configure($delta='') {
    $form = array();

    switch($delta) {
        case 'youtube':
            // Textarea form element
            $form['youtube_videos'] = array(
                '#type' => 'textarea',
                '#title' => t('Add Youtube videos'),
                '#description' => t('<p>Add Youtube video IDs here. Separate multiple IDs with a comma.</p>
                <p>An example with multiple IDs will look like:<br>
                <em>juSrk9VUkUU,qAfzDsZCK2c,MZJ9UX7qtYg</em></p>'),
                //'#element_validate' => array( 'youtube_block_custom_validate' ),
                '#default_value'=> variable_get('youtube_block_videos', 'Tj75Arhq5ho,_kscEoohfVY,wsrvmNtWU4E')
            );
            break;
    }
    return $form;
}

/**
 * Implements custom youtube_block_custom_validate().
 *
 * Check to make sure the user is inserting unique Youtube IDs.
 */
function youtube_block_custom_validate($element) {
    //Todo: Validate IDs
}

/**
 * Implements hook_block_save().
 */
function youtube_block_block_save($delta = '', $edit = array()) {
    switch($delta) {
        case 'youtube' :
            // Saving the Youtube videos
            variable_set('youtube_block_videos', $edit['youtube_videos']);

            break;
    }
}

/**
 * Implements hook_block_view().
 */
function youtube_block_block_view($delta='') {
    $block = array();

    switch($delta) {
        case 'youtube' :
            $block['content'] = youtube_block_build_block();
            break;
    }

    return $block;
}

/**
 * Assemble renderable array for block content.
 *
 * @return Returns a renderable array of block content.
 */
function youtube_block_build_block() {
    $block = array();

    // Get rid of any spaces
    $id_cleanup = preg_replace('/\s+/', '', variable_get('youtube_block_videos', 'Tj75Arhq5ho,_kscEoohfVY,wsrvmNtWU4E'));

    // Create an array of the IDs
    $videos = explode(',', $id_cleanup);

    $output = '';
    if (!empty($videos)) {
        foreach ($videos as $video) {
            $image = theme_image(array(
                'path' => ('https://img.youtube.com/vi/' . $video . '/hqdefault.jpg'),
                'alt' => t('Youtube Video'),
                'title' => t('Play Video'),
                'attributes' => array('id' => $video),
            ));
            $output .= '<div class="youtube">' . $image . '</div>';
        }
    }

    // Block output in HTML with div wrapper and custom JS + CSS loaded
    $block = array(
        'images' => array(
            '#prefix' => '<div class="section-wrapper">',
            '#suffix' => '</div>',
            '#type' => 'markup',
            '#markup' => $output,
            '#attached' => array(
                'css' => array(
                    drupal_get_path('module', 'youtube_block') . '/css/youtube_block.css',
                ),
                'js' => array(
                    drupal_get_path('module', 'youtube_block') . '/js/youtube_block.js',
                ),
            ),
        )
    );

    return $block;
}
